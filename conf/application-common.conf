# Number of database connections
# See https://github.com/brettwooldridge/HikariCP/wiki/About-Pool-Sizing
# db connections = ((physical_core_count * 2) + effective_spindle_count)
fixedConnectionPool = 9

# Set Hikari to fixed size
play.db {
  prototype {
    hikaricp.minimumIdle = ${fixedConnectionPool}
    hikaricp.maximumPoolSize = ${fixedConnectionPool}
  }
}

# Job queue sized to HikariCP connection pool
database.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

blockchain.dispatcher {
  executor = "thread-pool-executor"
  throughput = 1
  thread-pool-executor {
    fixed-pool-size = ${fixedConnectionPool}
  }
}

# Site specific settings
galactic.vote.jwt.issuer = "https://dev-galactic.vote.eu.auth0.com/"
galactic.vote.jwt.roles.claim = "https://galactic.pub/vote/roles"
galactic.vote.jwt.email.claim = "https://galactic.pub/vote/email"
galactic.vote.jwt.email.verified.claim = "https://galactic.pub/vote/email-verified"
galactic.vote.jwt.filtertag = "jwtFilter"
galactic.vote.jwt.optionalfiltertag = "jwtOptionalFilter"
galactic.vote.jwt.token.auth.issuer = "https://token.galactic.vote"
galactic.vote.jwt.token.auth.token.expiry.mins = 120
galactic.vote.jwt.token.auth.subject.prefix = "galactic.vote-tokenauth|"
galactic.vote.vote.related.min.time.interval.sec = 3600
# Used only for blind signature! https://en.wikipedia.org/wiki/Blind_signature#Dangers_of_RSA_blind_signing
galactic.vote.commission.envelope.rsa.key.file="private-envelope.pem"
galactic.vote.vote.buckets = 5
galactic.vote.max.votes.cap = ${?GALACTIC_VOTE_MAX_VOTES_CAP}
galactic.vote.scale.test.mode = false


# Stellar
galactic.vote.blockchain.stellar.votebuckets = 5
galactic.vote.blockchain.stellar.url = "https://horizon.stellar.org"
galactic.vote.blockchain.stellar.testnet.url = "https://horizon-testnet.stellar.org"

# IPFS
galactic.vote.ipfs.node.address = ${?GALACTIC_VOTE_IPFS_NODE_ADDRESS}
galactic.vote.ipfs.pinata.jwt = ${?GALACTIC_VOTE_IPFS_PINATA_JWT}
galactic.vote.ipfs.web3storage.jwt = ${?GALACTIC_VOTE_WEB3STORAGE_JWT}

# Tasks
galactic.vote.tasks.initial.delay.millis = 5000
galactic.vote.tasks.channel.interval.millis = 7000
galactic.vote.tasks.voting.init.interval.millis = 11000
galactic.vote.tasks.refund.balances.interval.millis = 50000
galactic.vote.tasks.email.invites.interval.millis = 10000
galactic.vote.tasks.token.auth.cleanup.interval.millis = 3000
galactic.vote.tasks.token.auth.cleanup.max.in.one.batch = 100
galactic.vote.tasks.token.auth.usable.days.after.voting.ended = 30

# Email invites
galactic.vote.email.invites.max.to.send.in.one.batch = 25

# Application secret
play.http.secret.key="changeme"
play.http.secret.key=${?GALACTIC_VOTE_APP_SECRET}


# Disable the CSRF filter, as JWT is used.
play.filters.disabled+=play.filters.csrf.CSRFFilter

# Allowed Hosts filter
play.filters.enabled += play.filters.hosts.AllowedHostsFilter
play.filters.hosts {
  # Allow requests to galactic.pub, its subdomains, and localhost:9000.
  allowed = [".galactic.pub", "localhost:9000"]
}

# CORS filter
play.filters.enabled+=play.filters.cors.CORSFilter
play.filters.cors.exposedHeaders=["Location"]

# HTTPS redirect
play.filters.enabled += play.filters.https.RedirectHttpsFilter

# Formatter
play.modules.disabled += "play.data.format.FormattersModule"

# Mailer
play.mailer {
  host = ${?GALACTIC_VOTE_MAIL_HOST}
  port = ${?GALACTIC_VOTE_MAIL_PORT}
  ssl = yes
  user = ${?GALACTIC_VOTE_MAIL_USER}
  password = ${?GALACTIC_VOTE_MAIL_PASSWORD}
  mock = no
}
